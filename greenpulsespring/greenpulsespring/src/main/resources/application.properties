#spring.application.name=greenpulsespring

# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url=jdbc:mysql://localhost:3308/greenpulsespring?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.username=root
spring.datasource.password=root

# Hibernate
#Le dialecte SQL permet à Hibernate de générer un meilleur SQL pour la base de données choisie
#pour trouver la bonne classe de numérotation de la base de données pour Mysql
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
#pour afficher les instructions sql sur la console
spring.jpa.show-sql=false
#pour rendre les instructions sql plus lisibles sur la console
spring.jpa.properties.hibernate.format_sql=true

#Thymeleaf
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.cache=false

#spring.web.resources.static-locations=file:///C:/greenpulse-images/

# Configuration d'Ollama
ollama.api.url=http://localhost:11434/api/chat
ollama.model=mistral

#OllamaIA
#Dans powershell, lancer le serveur que j'ai installé : ollama run mistral
#Lancer un serveur local accessible sur http://localhost:11434

# Définir une taille maximale de fichier (ex: 1000 Mo)
spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=1000MB
